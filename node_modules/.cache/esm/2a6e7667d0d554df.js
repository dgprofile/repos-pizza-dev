let express,auth,admin,registerController,loginController,userController,refreshController,productController;_d0d‍.x([["default",()=>_d0d‍.o]]);_d0d‍.w("express",[["default",["express"],function(v){express=v}]]);_d0d‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_d0d‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);_d0d‍.w("../controllers",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);


const router = express.Router();

router.post('/register', registerController.register);
router.post('/login', loginController.login);
router.get('/me', auth, userController.me);

router.post('/refresh', refreshController.refresh);
router.post('/logout', auth, loginController.logout);


//router.post('/products/cart-items', productController.getProducts);

router.post('/products', [auth, admin], productController.store);
router.put('/products/:id', [auth, admin], productController.update);
router.delete('/products/:id', [auth, admin], productController.destroy);
//router.get('/products', productController.index);
//router.get('/products/:id', productController.show);
_d0d‍.d(router);